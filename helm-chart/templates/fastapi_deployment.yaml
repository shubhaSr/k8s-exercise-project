
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-fastapi
  labels:
    app: fastapi
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
        - name: fastapi
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5000
              protocol: TCP
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
          env:
          - name: POSTGRES_HOST
            value: "db"  # The service name of your PostgreSQL deployment
          - name: POSTGRES_USER
            value: "admin"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-postgres-pass
                key: password
          - name: POSTGRES_DB
            value: "storedb"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-volume
      volumes:
        - name: postgres-volume
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc-datascientest
